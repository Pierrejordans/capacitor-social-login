{
  "api": {
    "name": "SocialLoginPlugin",
    "slug": "socialloginplugin",
    "docs": "",
    "tags": [],
    "methods": [
      {
        "name": "initialize",
        "signature": "(options: InitializeOptions) => Promise<void>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "InitializeOptions"
          }
        ],
        "returns": "Promise<void>",
        "tags": [
          {
            "name": "description",
            "text": "initialize the plugin with the required options"
          }
        ],
        "docs": "Initialize the plugin",
        "complexTypes": [
          "InitializeOptions"
        ],
        "slug": "initialize"
      },
      {
        "name": "login",
        "signature": "<T extends \"apple\" | \"google\">(options: Extract<LoginOptions, { provider: T; }>) => Promise<{ provider: T; result: ProviderResponseMap[T]; }>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "Extract<{ provider: 'google'; options: GoogleLoginOptions; }, { provider: T; }> | Extract<{ provider: 'apple'; options: AppleProviderOptions; }, { provider: T; }>"
          }
        ],
        "returns": "Promise<{ provider: T; result: ProviderResponseMap[T]; }>",
        "tags": [
          {
            "name": "description",
            "text": "login with the selected provider"
          }
        ],
        "docs": "Login with the selected provider",
        "complexTypes": [
          "T",
          "ProviderResponseMap",
          "LoginOptions",
          "Extract"
        ],
        "slug": "login"
      },
      {
        "name": "logout",
        "signature": "(options: { provider: 'apple' | 'google'; }) => Promise<void>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "{ provider: 'apple' | 'google'; }"
          }
        ],
        "returns": "Promise<void>",
        "tags": [
          {
            "name": "description",
            "text": "logout the user"
          }
        ],
        "docs": "Logout",
        "complexTypes": [],
        "slug": "logout"
      },
      {
        "name": "isLoggedIn",
        "signature": "(options: isLoggedInOptions) => Promise<{ isLoggedIn: boolean; }>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "isLoggedInOptions"
          }
        ],
        "returns": "Promise<{ isLoggedIn: boolean; }>",
        "tags": [
          {
            "name": "description",
            "text": "logout the user"
          }
        ],
        "docs": "IsLoggedIn",
        "complexTypes": [
          "isLoggedInOptions"
        ],
        "slug": "isloggedin"
      },
      {
        "name": "getAuthorizationCode",
        "signature": "(options: AuthorizationCodeOptions) => Promise<AuthorizationCode>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "AuthorizationCodeOptions"
          }
        ],
        "returns": "Promise<AuthorizationCode>",
        "tags": [
          {
            "name": "description",
            "text": "get the current access token"
          }
        ],
        "docs": "Get the current access token",
        "complexTypes": [
          "AuthorizationCode",
          "AuthorizationCodeOptions"
        ],
        "slug": "getauthorizationcode"
      },
      {
        "name": "refresh",
        "signature": "(options: LoginOptions) => Promise<void>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "LoginOptions"
          }
        ],
        "returns": "Promise<void>",
        "tags": [
          {
            "name": "description",
            "text": "refresh the access token"
          }
        ],
        "docs": "Refresh the access token",
        "complexTypes": [
          "LoginOptions"
        ],
        "slug": "refresh"
      },
      {
        "name": "providerSpecificCall",
        "signature": "<T extends never>(options: { call: T; options: ProviderSpecificCallOptionsMap[T]; }) => Promise<ProviderSpecificCallResponseMap[T]>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "{ call: T; options: never; }"
          }
        ],
        "returns": "Promise<never>",
        "tags": [
          {
            "name": "description",
            "text": "Execute a provider-specific functionality"
          }
        ],
        "docs": "Execute provider-specific calls",
        "complexTypes": [
          "ProviderSpecificCall",
          "T",
          "ProviderSpecificCallOptionsMap",
          "ProviderSpecificCallResponseMap"
        ],
        "slug": "providerspecificcall"
      }
    ],
    "properties": []
  },
  "interfaces": [
    {
      "name": "InitializeOptions",
      "slug": "initializeoptions",
      "docs": "",
      "tags": [],
      "methods": [],
      "properties": [
        {
          "name": "google",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "{ iOSClientId?: string | undefined; iOSServerClientId?: string | undefined; webClientId?: string | undefined; mode?: 'online' | 'offline' | undefined; hostedDomain?: string | undefined; redirectUrl?: string | undefined; } | undefined"
        },
        {
          "name": "apple",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "{ clientId?: string | undefined; redirectUrl?: string | undefined; useProperTokenExchange?: boolean | undefined; useBroadcastChannel?: boolean | undefined; } | undefined"
        }
      ]
    },
    {
      "name": "GoogleLoginResponseOnline",
      "slug": "googleloginresponseonline",
      "docs": "",
      "tags": [],
      "methods": [],
      "properties": [
        {
          "name": "accessToken",
          "tags": [],
          "docs": "",
          "complexTypes": [
            "AccessToken"
          ],
          "type": "AccessToken | null"
        },
        {
          "name": "idToken",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "string | null"
        },
        {
          "name": "profile",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "{ email: string | null; familyName: string | null; givenName: string | null; id: string | null; name: string | null; imageUrl: string | null; }"
        },
        {
          "name": "responseType",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "'online'"
        }
      ]
    },
    {
      "name": "AccessToken",
      "slug": "accesstoken",
      "docs": "",
      "tags": [],
      "methods": [],
      "properties": [
        {
          "name": "applicationId",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "string | undefined"
        },
        {
          "name": "declinedPermissions",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "string[] | undefined"
        },
        {
          "name": "expires",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "string | undefined"
        },
        {
          "name": "isExpired",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "boolean | undefined"
        },
        {
          "name": "lastRefresh",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "string | undefined"
        },
        {
          "name": "permissions",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "string[] | undefined"
        },
        {
          "name": "token",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "string"
        },
        {
          "name": "refreshToken",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "string | undefined"
        },
        {
          "name": "userId",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "string | undefined"
        }
      ]
    },
    {
      "name": "GoogleLoginResponseOffline",
      "slug": "googleloginresponseoffline",
      "docs": "",
      "tags": [],
      "methods": [],
      "properties": [
        {
          "name": "serverAuthCode",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "string"
        },
        {
          "name": "responseType",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "'offline'"
        }
      ]
    },
    {
      "name": "AppleProviderResponse",
      "slug": "appleproviderresponse",
      "docs": "",
      "tags": [],
      "methods": [],
      "properties": [
        {
          "name": "accessToken",
          "tags": [
            {
              "text": "Content depends on `useProperTokenExchange` setting:\r\n- When `useProperTokenExchange: true`: Real access token from Apple (~1 hour validity)\r\n- When `useProperTokenExchange: false`: Contains authorization code as token (legacy mode)\r\nUse `idToken` for user authentication, `accessToken` for API calls when properly exchanged.",
              "name": "description"
            }
          ],
          "docs": "Access token from Apple",
          "complexTypes": [
            "AccessToken"
          ],
          "type": "AccessToken | null"
        },
        {
          "name": "idToken",
          "tags": [
            {
              "text": "Always contains the JWT with user identity information including:\r\n- User ID (sub claim)\r\n- Email (if user granted permission)\r\n- Name components (if user granted permission)\r\n- Email verification status\r\nThis is the primary token for user authentication and should be verified on your backend.",
              "name": "description"
            }
          ],
          "docs": "Identity token (JWT) from Apple",
          "complexTypes": [],
          "type": "string | null"
        },
        {
          "name": "profile",
          "tags": [
            {
              "text": "Basic user profile data extracted from the identity token and Apple response:\r\n- `user`: Apple's user identifier (sub claim from idToken)\r\n- `email`: User's email address (if permission granted)\r\n- `givenName`: User's first name (if permission granted)\r\n- `familyName`: User's last name (if permission granted)",
              "name": "description"
            }
          ],
          "docs": "User profile information",
          "complexTypes": [],
          "type": "{ user: string; email: string | null; givenName: string | null; familyName: string | null; }"
        },
        {
          "name": "authorizationCode",
          "tags": [
            {
              "text": "Only present when `useProperTokenExchange` is `true`. This code should be exchanged\r\nfor proper access tokens on your backend using Apple's token endpoint. Use this for secure\r\nserver-side token validation and to obtain refresh tokens.",
              "name": "description"
            },
            {
              "text": "https ://developer.apple.com/documentation/sign_in_with_apple/tokenresponse",
              "name": "see"
            }
          ],
          "docs": "Authorization code for proper token exchange (when useProperTokenExchange is enabled)",
          "complexTypes": [],
          "type": "string | undefined"
        }
      ]
    },
    {
      "name": "GoogleLoginOptions",
      "slug": "googleloginoptions",
      "docs": "",
      "tags": [],
      "methods": [],
      "properties": [
        {
          "name": "scopes",
          "tags": [
            {
              "text": "[\"profile\", \"email\"]",
              "name": "example"
            },
            {
              "text": " [Google OAuth2 Scopes](https://developers.google.com/identity/protocols/oauth2/scopes)",
              "name": "see"
            }
          ],
          "docs": "Specifies the scopes required for accessing Google APIs\r\nThe default is defined in the configuration.",
          "complexTypes": [],
          "type": "string[] | undefined"
        },
        {
          "name": "nonce",
          "tags": [
            {
              "text": "nonce",
              "name": "description"
            }
          ],
          "docs": "Nonce",
          "complexTypes": [],
          "type": "string | undefined"
        },
        {
          "name": "forceRefreshToken",
          "tags": [
            {
              "text": "force refresh token",
              "name": "description"
            },
            {
              "text": "false",
              "name": "default"
            }
          ],
          "docs": "Force refresh token (only for Android)",
          "complexTypes": [],
          "type": "boolean | undefined"
        },
        {
          "name": "forcePrompt",
          "tags": [
            {
              "text": "forces the account selection prompt to appear on iOS",
              "name": "description"
            },
            {
              "text": "false",
              "name": "default"
            }
          ],
          "docs": "Force account selection prompt (iOS)",
          "complexTypes": [],
          "type": "boolean | undefined"
        },
        {
          "name": "style",
          "tags": [
            {
              "text": "style",
              "name": "description"
            },
            {
              "text": "'standard'",
              "name": "default"
            }
          ],
          "docs": "Style",
          "complexTypes": [],
          "type": "'bottom' | 'standard' | undefined"
        },
        {
          "name": "filterByAuthorizedAccounts",
          "tags": [
            {
              "text": "Only show accounts that have previously been used to sign in to the app.\r\nThis option is only available for the 'bottom' style.\r\nNote: For Family Link supervised accounts, this should be set to false.",
              "name": "description"
            },
            {
              "text": "true",
              "name": "default"
            }
          ],
          "docs": "Filter by authorized accounts (Android only)",
          "complexTypes": [],
          "type": "boolean | undefined"
        },
        {
          "name": "autoSelectEnabled",
          "tags": [
            {
              "text": "Automatically select the account if only one Google account is available.\r\nThis option is only available for the 'bottom' style.",
              "name": "description"
            },
            {
              "text": "false",
              "name": "default"
            }
          ],
          "docs": "Auto select enabled (Android only)",
          "complexTypes": [],
          "type": "boolean | undefined"
        }
      ]
    },
    {
      "name": "AppleProviderOptions",
      "slug": "appleprovideroptions",
      "docs": "",
      "tags": [],
      "methods": [],
      "properties": [
        {
          "name": "scopes",
          "tags": [
            {
              "text": "An array of scopes to request during login",
              "name": "description"
            },
            {
              "text": "[\"name\", \"email\"]\r\ndefault: [\"name\", \"email\"]",
              "name": "example"
            }
          ],
          "docs": "Scopes",
          "complexTypes": [],
          "type": "string[] | undefined"
        },
        {
          "name": "nonce",
          "tags": [
            {
              "text": "nonce",
              "name": "description"
            }
          ],
          "docs": "Nonce",
          "complexTypes": [],
          "type": "string | undefined"
        },
        {
          "name": "state",
          "tags": [
            {
              "text": "state",
              "name": "description"
            }
          ],
          "docs": "State",
          "complexTypes": [],
          "type": "string | undefined"
        },
        {
          "name": "useBroadcastChannel",
          "tags": [
            {
              "text": "When enabled, uses Broadcast Channel API for communication instead of URL redirects.\r\nOnly applicable on platforms that support Broadcast Channel (Android).",
              "name": "description"
            },
            {
              "text": "false",
              "name": "default"
            }
          ],
          "docs": "Use Broadcast Channel for authentication flow",
          "complexTypes": [],
          "type": "boolean | undefined"
        }
      ]
    },
    {
      "name": "isLoggedInOptions",
      "slug": "isloggedinoptions",
      "docs": "",
      "tags": [],
      "methods": [],
      "properties": [
        {
          "name": "provider",
          "tags": [
            {
              "text": "Provider for the isLoggedIn",
              "name": "description"
            }
          ],
          "docs": "Provider",
          "complexTypes": [],
          "type": "'apple' | 'google'"
        }
      ]
    },
    {
      "name": "AuthorizationCode",
      "slug": "authorizationcode",
      "docs": "",
      "tags": [],
      "methods": [],
      "properties": [
        {
          "name": "jwt",
          "tags": [
            {
              "text": "A JSON web token",
              "name": "description"
            }
          ],
          "docs": "Jwt",
          "complexTypes": [],
          "type": "string | undefined"
        },
        {
          "name": "accessToken",
          "tags": [
            {
              "text": "An access token",
              "name": "description"
            }
          ],
          "docs": "Access Token",
          "complexTypes": [],
          "type": "string | undefined"
        }
      ]
    },
    {
      "name": "AuthorizationCodeOptions",
      "slug": "authorizationcodeoptions",
      "docs": "",
      "tags": [],
      "methods": [],
      "properties": [
        {
          "name": "provider",
          "tags": [
            {
              "text": "Provider for the authorization code",
              "name": "description"
            }
          ],
          "docs": "Provider",
          "complexTypes": [],
          "type": "'apple' | 'google'"
        }
      ]
    }
  ],
  "enums": [],
  "typeAliases": [
    {
      "name": "ProviderResponseMap",
      "slug": "providerresponsemap",
      "docs": "",
      "types": [
        {
          "text": "{\r\n  google: GoogleLoginResponse;\r\n  apple: AppleProviderResponse;\r\n}",
          "complexTypes": [
            "GoogleLoginResponse",
            "AppleProviderResponse"
          ]
        }
      ]
    },
    {
      "name": "GoogleLoginResponse",
      "slug": "googleloginresponse",
      "docs": "",
      "types": [
        {
          "text": "GoogleLoginResponseOnline",
          "complexTypes": [
            "GoogleLoginResponseOnline"
          ]
        },
        {
          "text": "GoogleLoginResponseOffline",
          "complexTypes": [
            "GoogleLoginResponseOffline"
          ]
        }
      ]
    },
    {
      "name": "LoginOptions",
      "slug": "loginoptions",
      "docs": "",
      "types": [
        {
          "text": "{\r\n      provider: 'google';\r\n      options: GoogleLoginOptions;\r\n    }",
          "complexTypes": [
            "GoogleLoginOptions"
          ]
        },
        {
          "text": "{\r\n      provider: 'apple';\r\n      options: AppleProviderOptions;\r\n    }",
          "complexTypes": [
            "AppleProviderOptions"
          ]
        }
      ]
    },
    {
      "name": "Extract",
      "slug": "extract",
      "docs": "Extract from T those types that are assignable to U",
      "types": [
        {
          "text": "T extends U ? T : never",
          "complexTypes": [
            "T",
            "U"
          ]
        }
      ]
    },
    {
      "name": "ProviderSpecificCall",
      "slug": "providerspecificcall",
      "docs": "",
      "types": [
        {
          "text": "never",
          "complexTypes": []
        }
      ]
    },
    {
      "name": "ProviderSpecificCallOptionsMap",
      "slug": "providerspecificcalloptionsmap",
      "docs": "",
      "types": [
        {
          "text": "Record<string, never>",
          "complexTypes": [
            "Record"
          ]
        }
      ]
    },
    {
      "name": "Record",
      "slug": "record",
      "docs": "Construct a type with a set of properties K of type T",
      "types": [
        {
          "text": "{\r\n    [P in K]: T;\r\n}",
          "complexTypes": [
            "K",
            "T"
          ]
        }
      ]
    },
    {
      "name": "ProviderSpecificCallResponseMap",
      "slug": "providerspecificcallresponsemap",
      "docs": "",
      "types": [
        {
          "text": "Record<string, never>",
          "complexTypes": [
            "Record"
          ]
        }
      ]
    }
  ],
  "pluginConfigs": []
}