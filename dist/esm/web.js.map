{"version":3,"file":"web.js","sourceRoot":"","sources":["../../src/web.ts"],"names":[],"mappings":"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","sourcesContent":["import { WebPlugin } from '@capacitor/core';\r\n\r\nimport { AppleSocialLogin } from './apple-provider';\r\nimport type {\r\n  SocialLoginPlugin,\r\n  InitializeOptions,\r\n  LoginOptions,\r\n  AuthorizationCode,\r\n  AuthorizationCodeOptions,\r\n  isLoggedInOptions,\r\n  ProviderResponseMap,\r\n  ProviderSpecificCall,\r\n  ProviderSpecificCallOptionsMap,\r\n  ProviderSpecificCallResponseMap,\r\n} from './definitions';\r\nimport { GoogleSocialLogin } from './google-provider';\r\n\r\nexport class SocialLoginWeb extends WebPlugin implements SocialLoginPlugin {\r\n  private static readonly OAUTH_STATE_KEY = 'social_login_oauth_pending';\r\n\r\n  private googleProvider: GoogleSocialLogin;\r\n  private appleProvider: AppleSocialLogin;\r\n\r\n  constructor() {\r\n    super();\r\n\r\n    this.googleProvider = new GoogleSocialLogin();\r\n    this.appleProvider = new AppleSocialLogin();\r\n\r\n    // Set up listener for OAuth redirects if we have a pending OAuth flow\r\n    if (localStorage.getItem(SocialLoginWeb.OAUTH_STATE_KEY)) {\r\n      console.log('OAUTH_STATE_KEY found');\r\n      const result = this.handleOAuthRedirect();\r\n      if (result) {\r\n        window.opener?.postMessage(\r\n          {\r\n            type: 'oauth-response',\r\n            ...result.result,\r\n          },\r\n          window.location.origin,\r\n        );\r\n        window.close();\r\n      }\r\n    }\r\n  }\r\n\r\n  private handleOAuthRedirect() {\r\n    const url = new URL(window.location.href);\r\n    return this.googleProvider.handleOAuthRedirect(url);\r\n  }\r\n\r\n  async initialize(options: InitializeOptions): Promise<void> {\r\n    const initPromises: Promise<void>[] = [];\r\n\r\n    if (options.google?.webClientId) {\r\n      initPromises.push(\r\n        this.googleProvider.initialize(\r\n          options.google.webClientId,\r\n          options.google.mode,\r\n          options.google.hostedDomain,\r\n          options.google.redirectUrl,\r\n        ),\r\n      );\r\n    }\r\n\r\n    if (options.apple?.clientId) {\r\n      initPromises.push(\r\n        this.appleProvider.initialize(\r\n          options.apple.clientId,\r\n          options.apple.redirectUrl,\r\n          options.apple.useProperTokenExchange,\r\n        ),\r\n      );\r\n    }\r\n\r\n\r\n    await Promise.all(initPromises);\r\n  }\r\n\r\n  async login<T extends LoginOptions['provider']>(\r\n    options: Extract<LoginOptions, { provider: T }>,\r\n  ): Promise<{ provider: T; result: ProviderResponseMap[T] }> {\r\n    switch (options.provider) {\r\n      case 'google':\r\n        return this.googleProvider.login(options.options) as Promise<{ provider: T; result: ProviderResponseMap[T] }>;\r\n      case 'apple':\r\n        return this.appleProvider.login(options.options) as Promise<{ provider: T; result: ProviderResponseMap[T] }>;\r\n      default:\r\n        throw new Error(`Login for ${options.provider} is not implemented on web`);\r\n    }\r\n  }\r\n\r\n  async logout(options: { provider: 'apple' | 'google' }): Promise<void> {\r\n    switch (options.provider) {\r\n      case 'google':\r\n        return this.googleProvider.logout();\r\n      case 'apple':\r\n        return this.appleProvider.logout();\r\n      default:\r\n        throw new Error(`Logout for ${options.provider} is not implemented`);\r\n    }\r\n  }\r\n\r\n  async isLoggedIn(options: isLoggedInOptions): Promise<{ isLoggedIn: boolean }> {\r\n    switch (options.provider) {\r\n      case 'google':\r\n        return this.googleProvider.isLoggedIn();\r\n      case 'apple':\r\n        return this.appleProvider.isLoggedIn();\r\n      default:\r\n        throw new Error(`isLoggedIn for ${options.provider} is not implemented`);\r\n    }\r\n  }\r\n\r\n  async getAuthorizationCode(options: AuthorizationCodeOptions): Promise<AuthorizationCode> {\r\n    switch (options.provider) {\r\n      case 'google':\r\n        return this.googleProvider.getAuthorizationCode();\r\n      case 'apple':\r\n        return this.appleProvider.getAuthorizationCode();\r\n      default:\r\n        throw new Error(`getAuthorizationCode for ${options.provider} is not implemented`);\r\n    }\r\n  }\r\n\r\n  async refresh(options: LoginOptions): Promise<void> {\r\n    switch (options.provider) {\r\n      case 'google':\r\n        return this.googleProvider.refresh();\r\n      case 'apple':\r\n        return this.appleProvider.refresh();\r\n      default:\r\n        throw new Error(`Refresh for ${(options as any).provider} is not implemented`);\r\n    }\r\n  }\r\n\r\n  async providerSpecificCall<T extends ProviderSpecificCall>(options: {\r\n    call: T;\r\n    options: ProviderSpecificCallOptionsMap[T];\r\n  }): Promise<ProviderSpecificCallResponseMap[T]> {\r\n    throw new Error(`Provider specific call for ${options.call} is not implemented`);\r\n  }\r\n}\r\n"]}